import * as ThemeKey from './theme-key'

export const SCALES = {
  color: ThemeKey.COLORS,
  backgroundColor: ThemeKey.COLORS,
  borderColor: ThemeKey.COLORS,
  caretColor: ThemeKey.COLORS,
  columnRuleColor: ThemeKey.COLORS,
  opacity: ThemeKey.OPACITIES,
  transition: ThemeKey.TRANSITIONS,
  transitionDuration: ThemeKey.DURATIONS,
  transitionTimingFunction: ThemeKey.TIMINGS,
  animationDuration: ThemeKey.DURATIONS,
  animationTimingFunction: ThemeKey.TIMINGS,
  margin: ThemeKey.SPACE,
  marginTop: ThemeKey.SPACE,
  marginRight: ThemeKey.SPACE,
  marginBottom: ThemeKey.SPACE,
  marginLeft: ThemeKey.SPACE,
  marginX: ThemeKey.SPACE,
  marginY: ThemeKey.SPACE,
  marginBlock: ThemeKey.SPACE,
  marginBlockEnd: ThemeKey.SPACE,
  marginBlockStart: ThemeKey.SPACE,
  marginInline: ThemeKey.SPACE,
  marginInlineEnd: ThemeKey.SPACE,
  marginInlineStart: ThemeKey.SPACE,
  padding: ThemeKey.SPACE,
  paddingTop: ThemeKey.SPACE,
  paddingRight: ThemeKey.SPACE,
  paddingBottom: ThemeKey.SPACE,
  paddingLeft: ThemeKey.SPACE,
  paddingX: ThemeKey.SPACE,
  paddingY: ThemeKey.SPACE,
  paddingBlock: ThemeKey.SPACE,
  paddingBlockEnd: ThemeKey.SPACE,
  paddingBlockStart: ThemeKey.SPACE,
  paddingInline: ThemeKey.SPACE,
  paddingInlineEnd: ThemeKey.SPACE,
  paddingInlineStart: ThemeKey.SPACE,
  scrollPadding: ThemeKey.SPACE,
  scrollPaddingTop: ThemeKey.SPACE,
  scrollPaddingRight: ThemeKey.SPACE,
  scrollPaddingBottom: ThemeKey.SPACE,
  scrollPaddingLeft: ThemeKey.SPACE,
  scrollPaddingX: ThemeKey.SPACE,
  scrollPaddingY: ThemeKey.SPACE,
  inset: ThemeKey.SPACE,
  insetBlock: ThemeKey.SPACE,
  insetBlockEnd: ThemeKey.SPACE,
  insetBlockStart: ThemeKey.SPACE,
  insetInline: ThemeKey.SPACE,
  insetInlineEnd: ThemeKey.SPACE,
  insetInlineStart: ThemeKey.SPACE,
  top: ThemeKey.SPACE,
  right: ThemeKey.SPACE,
  bottom: ThemeKey.SPACE,
  left: ThemeKey.SPACE,
  gridGap: ThemeKey.SPACE,
  gridColumnGap: ThemeKey.SPACE,
  gridRowGap: ThemeKey.SPACE,
  gap: ThemeKey.SPACE,
  columnGap: ThemeKey.SPACE,
  rowGap: ThemeKey.SPACE,
  fontFamily: ThemeKey.FONTS,
  fontSize: ThemeKey.FONT_SIZES,
  fontWeight: ThemeKey.FONT_WEIGHTS,
  lineHeight: ThemeKey.LINE_HEIGHTS,
  letterSpacing: ThemeKey.LETTER_SPACINGS,
  border: ThemeKey.BORDERS,
  borderTop: ThemeKey.BORDERS,
  borderRight: ThemeKey.BORDERS,
  borderBottom: ThemeKey.BORDERS,
  borderLeft: ThemeKey.BORDERS,
  borderWidth: ThemeKey.BORDER_WIDTHS,
  borderStyle: ThemeKey.BORDER_STYLES,
  borderRadius: ThemeKey.RADII,
  borderTopRightRadius: ThemeKey.RADII,
  borderTopLeftRadius: ThemeKey.RADII,
  borderBottomRightRadius: ThemeKey.RADII,
  borderBottomLeftRadius: ThemeKey.RADII,
  borderTopWidth: ThemeKey.BORDER_WIDTHS,
  borderTopColor: ThemeKey.COLORS,
  borderTopStyle: ThemeKey.BORDER_STYLES,
  borderBottomWidth: ThemeKey.BORDER_WIDTHS,
  borderBottomColor: ThemeKey.COLORS,
  borderBottomStyle: ThemeKey.BORDER_STYLES,
  borderLeftWidth: ThemeKey.BORDER_WIDTHS,
  borderLeftColor: ThemeKey.COLORS,
  borderLeftStyle: ThemeKey.BORDER_STYLES,
  borderRightWidth: ThemeKey.BORDER_WIDTHS,
  borderRightColor: ThemeKey.COLORS,
  borderRightStyle: ThemeKey.BORDER_STYLES,
  borderBlock: ThemeKey.BORDERS,
  borderBlockEnd: ThemeKey.BORDERS,
  borderBlockEndStyle: ThemeKey.BORDER_STYLES,
  borderBlockEndWidth: ThemeKey.BORDER_WIDTHS,
  borderBlockStart: ThemeKey.BORDERS,
  borderBlockStartStyle: ThemeKey.BORDER_STYLES,
  borderBlockStartWidth: ThemeKey.BORDER_WIDTHS,
  borderBlockStyle: ThemeKey.BORDER_STYLES,
  borderBlockWidth: ThemeKey.BORDER_WIDTHS,
  borderEndEndRadius: ThemeKey.RADII,
  borderEndStartRadius: ThemeKey.RADII,
  borderInline: ThemeKey.BORDERS,
  borderInlineEnd: ThemeKey.BORDERS,
  borderInlineEndStyle: ThemeKey.BORDER_STYLES,
  borderInlineEndWidth: ThemeKey.BORDER_WIDTHS,
  borderInlineStart: ThemeKey.BORDERS,
  borderInlineStartStyle: ThemeKey.BORDER_STYLES,
  borderInlineStartWidth: ThemeKey.BORDER_WIDTHS,
  borderInlineStyle: ThemeKey.BORDER_STYLES,
  borderInlineWidth: ThemeKey.BORDER_WIDTHS,
  borderStartEndRadius: ThemeKey.RADII,
  borderStartStartRadius: ThemeKey.RADII,
  outlineColor: ThemeKey.COLORS,
  boxShadow: ThemeKey.SHADOWS,
  textShadow: ThemeKey.SHADOWS,
  zIndex: ThemeKey.Z_INDICES,
  width: ThemeKey.SIZES,
  minWidth: ThemeKey.SIZES,
  maxWidth: ThemeKey.SIZES,
  height: ThemeKey.SIZES,
  minHeight: ThemeKey.SIZES,
  maxHeight: ThemeKey.SIZES,
  flexBasis: ThemeKey.SIZES,
  size: ThemeKey.SIZES,
  blockSize: ThemeKey.SIZES,
  inlineSize: ThemeKey.SIZES,
  maxBlockSize: ThemeKey.SIZES,
  maxInlineSize: ThemeKey.SIZES,
  minBlockSize: ThemeKey.SIZES,
  minInlineSize: ThemeKey.SIZES,
  fill: ThemeKey.COLORS,
  stroke: ThemeKey.COLORS,
} as const
